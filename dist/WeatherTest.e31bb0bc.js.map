{"version":3,"sources":["init.js","index.js"],"names":["init","form","document","querySelector","tbody","top","low","state","list","flag","random","min","max","Math","floor","deleteRow","e","preventDefault","filter","delElement","target","id","render","weatherData","rows","map","item","temp","pressure","name","innerHTML","join","delElements","querySelectorAll","forEach","del","addEventListener","callback","formData","FormData","city","get","url","fetch","then","response","result","json","console","log","String","main","data","push","catch","error","sortCity","getElementById","sort","a","b","setAttribute"],"mappings":"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","file":"WeatherTest.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const init = () => {\n\n  const form = document.querySelector('form');\n  const tbody = document.querySelector('table tbody');\n  const top = document.querySelector('#top');\n  const low = document.querySelector('#low');\n  const state = {\n    list: [],\n    flag: true\n  }\n  \n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n \n  const deleteRow = (e) => {\n    e.preventDefault;\n    state.list = state.list.filter((delElement) => e.target.id !== delElement.id);\n    render(state.list); \n  }\n \n  const render = (weatherData) => {\n  const rows = weatherData.map((item) => {\n  const { temp, pressure, name, id } = item;\n  return `<tr>\n     <td>${name}</td>\n     <td>${temp}°C</td>\n     <td>${pressure} hPa</td>\n     <td><button id=\"${id}\" class=\"del\" type=\"click\">Удалить</button></td>\n  </tr>`\n  })\n  tbody.innerHTML = rows.join('');\n  const delElements = document.querySelectorAll('.del');\n  delElements.forEach(del => {del.addEventListener(\"click\", deleteRow )} )\n };\n \n   const callback = (e) => {\n       e.preventDefault();\n       const formData = new FormData(e.target);\n       const city = formData.get('city');\n       const url = (`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=5fbfe39e449774757ff0d800cbb8453d`);\n       fetch(url)\n          .then((response) => {\n            const result = response.json();\n            console.log(result);\n         return result;\n         })\n         .then((result) => {\n             const id = String(random(1, 1000));\n             const { name, main: {temp, pressure} } = result;\n             const data = { temp, pressure, name, id };\n             state.list.push(data);\n             render(state.list);\n            })\n          .catch(console.error);\n     };\n \n   const sortCity = document.getElementById('sort');\n   console.log(sortCity);\n     sortCity.addEventListener(\"click\", e => {\n       e.preventDefault();\n       if (state.flag) {\n         state.list.sort((a, b) => a.temp > b.temp ? 1 : -1);\n         top.setAttribute('class', 'new-sort-arrow-up');\n         low.setAttribute('class', 'new-sort-arrow-down');\n       }\n     else {\n         state.list.sort((a, b) => a.temp < b.temp ? 1 : -1);\n         top.setAttribute('class', 'sort-arrow-up');\n         low.setAttribute('class', 'sort-arrow-down');\n       }\n       state.flag = !state.flag\n        render(state.list);\n   });\n \n form.addEventListener('submit', callback);\n\n};\n\nexport default init;","import init from './init.js';\n\n  init();"]}